{
	"info": {
		"_postman_id": "e73618cf-e191-4db1-82a3-6a211274f416",
		"name": "pay-api",
		"description": "version=1.0.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Fees",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ab09244-2ee0-4849-9ca0-ee39660b7dfe",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"filing type code matches\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.filing_type_code).to.eql(environment['filing-type-code']);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/fees/{{corp-type}}/{{filing-type-code}}",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"fees",
						"{{corp-type}}",
						"{{filing-type-code}}"
					]
				},
				"description": "Calculate fees by Corp Type and Filing type"
			},
			"response": []
		},
		{
			"name": "Create Payment Record",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"payment_info\": {\n    \"method_of_payment\": \"CC\"\n  },\n  \"business_info\": {\n    \"business_identifier\": \"CP1234\",\n    \"corp_type\": \"CP\",\n    \"business_name\": \"ABC Corp\",\n    \"contact_info\": {\n      \"city\": \"Victoria\",\n      \"postal_code\": \"V8P2P2\",\n      \"province\": \"BC\",\n      \"address_line_1\": \"100 Douglas Street\",\n      \"country\": \"CA\"\n    }\n  },\n  \"filing_info\": {\n    \"filing_types\": [\n      {\n        \"filing_type_code\": \"OTADD\",\n    \t\"filing_description\":\"TEST\"\n      },\n      {\n        \"filing_type_code\": \"OTANN\"\n      }\n    ]\n  }\n}"
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Payment Record",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Invoices for the payment",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/invoices",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"invoices"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Invoice for the payment",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/invoices/{{invoice_id}}",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"invoices",
						"{{invoice_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Payment Record ",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"payment_info\": {\n    \"method_of_payment\": \"CC\"\n  },\n  \"business_info\": {\n    \"business_identifier\": \"cp0000019\",\n    \"corp_type\": \"CP\",\n    \"business_name\": \"ABC Corp\",\n    \"contact_info\": {\n      \"city\": \"Victoria\",\n      \"postal_code\": \"V8P2P2\",\n      \"province\": \"BC\",\n      \"address_line_1\": \"100 Douglas Street\",\n      \"country\": \"CA\"\n    }\n  },\n  \"filing_info\": {\n    \"filing_types\": [\n      {\n        \"filing_type_code\": \"OTCDR\",\n    \t\"filing_description\":\"Change of Directors - Director A\"\n      },\n      {\n        \"filing_type_code\": \"OTANN\"\n      }\n      \n    ]\n  }\n}"
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Transaction Record",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/transactions?redirect_uri=http%3A//localhost%3A8080/coops-web/transactions%3Ftransaction_id%3Dabcd",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"transactions"
					],
					"query": [
						{
							"key": "redirect_uri",
							"value": "http%3A//localhost%3A8080/coops-web/transactions%3Ftransaction_id%3Dabcd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Transactions for the payment",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/transactions",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Transaction for the payment",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/transactions/{{transaction-identifier}}",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"transactions",
						"{{transaction-identifier}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Transaction against a payment",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/transactions/{{transaction-identifier}}",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"transactions",
						"{{transaction-identifier}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate Receipt with Payment Identifier",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"corpName\": \"CP1234\",\n    \"filingDateTime\": \"June 27, 2019\",\n    \"fileName\":\"director-change\"\n}"
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/receipts",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"receipts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate Receipt with Payment Identifier and Invoice Identifier",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"corpName\": \"CP1234\",\n    \"filingDateTime\": \"June 27, 2019\",\n    \"fileName\":\"director-change\"\n}"
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/payments/{{payment-identifier}}/invoices/{{invoice_id}}/receipts",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"payments",
						"{{payment-identifier}}",
						"invoices",
						"{{invoice_id}}",
						"receipts"
					]
				}
			},
			"response": []
		},
		{
			"name": "POC  - BCOL - Verify User",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"userId\":\"pc25020\",\n\t\"userKey\":\"3065\"\n}"
				},
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/bcol/accounts/180670/users/pb25020",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"bcol",
						"accounts",
						"180670",
						"users",
						"pb25020"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Service Downtime Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3355ed3b-4d14-4e1d-85e5-4ca3dbc79115",
						"exec": [
							"pm.test(\"Response time is less than 5000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);",
							"});",
							"",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    //pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Verify payload\",  () => {",
							"    pm.expect(pm.response.text()).to.include(\"service\");",
							"    pm.expect(pm.response.text()).to.include(\"current_status\");",
							"    pm.expect(pm.response.text()).to.not.include(\"service_name\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{pay-api-base-url}}/api/v1/status/PAYBC",
					"host": [
						"{{pay-api-base-url}}"
					],
					"path": [
						"api",
						"v1",
						"status",
						"PAYBC"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{accessToken}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dca1bb4a-f917-43e2-ae5d-3cd3c52d1daf",
				"type": "text/javascript",
				"exec": [
					"function getvar(variableName) {",
					"    let value = pm.variables.get(variableName);",
					"    if (!value) throw new Error(",
					"        `Variable '${variableName}' is not defined.`);",
					"    return value;",
					"}",
					"",
					"let tokenUrl = getvar('tokenUrl');",
					"let userName = getvar('userName');",
					"let passCode = getvar('passCode');",
					"",
					"let getTokenRequest = {",
					"    method: 'POST',",
					"    url: tokenUrl,",
					"    header: {",
					"        'content-type': 'application/json'",
					"    },",
					" ",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({ \"username\": userName, \"password\": passCode })",
					"    }",
					"    ",
					"};",
					"",
					"pm.sendRequest(getTokenRequest, (err, response) => {",
					"    let jsonResponse = response.json(),",
					"        newAccessToken = jsonResponse.access_token;",
					"",
					"    console.log({ err, jsonResponse, newAccessToken })",
					"",
					"    pm.environment.set('accessToken', newAccessToken);",
					"    pm.variables.set('accessToken', newAccessToken);",
					"});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c078047b-a96e-41ad-8b31-a89c2528dd8e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}