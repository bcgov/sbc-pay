"""add_status_codes

Revision ID: a23093f25c56
Revises: f50d7a538b8f
Create Date: 2020-05-12 18:04:40.898561

"""

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "a23093f25c56"
down_revision = "f50d7a538b8f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    inv_ref_status_code_table = op.create_table(
        "invoice_reference_status_code",
        sa.Column("code", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("code"),
    )
    inv_status_code_table = op.create_table(
        "invoice_status_code",
        sa.Column("code", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("code"),
    )
    line_status_code_table = op.create_table(
        "line_item_status_code",
        sa.Column("code", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("code"),
    )
    payment_status_code_table = op.create_table(
        "payment_status_code",
        sa.Column("code", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("code"),
    )
    txn_status_code_table = op.create_table(
        "transaction_status_code",
        sa.Column("code", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("code"),
    )
    # Insert data
    op.bulk_insert(
        inv_status_code_table,
        [
            {"code": "CREATED", "description": "Created"},
            {"code": "PAID", "description": "Paid"},
            {"code": "DELETED", "description": "Cancelled"},
            {"code": "COMPLETED", "description": "Paid"},
        ],
    )

    op.bulk_insert(
        payment_status_code_table,
        [
            {"code": "CREATED", "description": "Pending"},
            {"code": "COMPLETED", "description": "Paid"},
            {"code": "DELETED", "description": "Cancelled"},
            {"code": "DELETE_ACCEPTED", "description": "Pending Cancel"},
        ],
    )

    op.bulk_insert(
        txn_status_code_table,
        [
            {"code": "CREATED", "description": "In Progress"},
            {"code": "CANCELLED", "description": "Transaction Cancelled"},
            {"code": "EVENT_FAILED", "description": "Failed to publish"},
            {"code": "FAILED", "description": "Transaction Failed"},
            {"code": "COMPLETED", "description": "Completed"},
        ],
    )

    op.bulk_insert(
        line_status_code_table,
        [
            {"code": "ACTIVE", "description": "Active"},
            {"code": "CANCELLED", "description": "Cancelled"},
            {"code": "CREATED", "description": "Created"},
            {"code": "DELETED", "description": "Deleted"},
        ],
    )

    op.bulk_insert(
        inv_ref_status_code_table,
        [
            {"code": "ACTIVE", "description": "Active"},
            {"code": "CANCELLED", "description": "Cancelled"},
            {"code": "COMPLETED", "description": "Completed"},
            {"code": "DELETED", "description": "Deleted"},
            {"code": "CREATED", "description": "Created"},
        ],
    )

    op.drop_constraint(
        "invoice_invoice_status_code_fkey", "invoice", type_="foreignkey"
    )
    op.create_foreign_key(
        "invoice_invoice_status_code_fkey",
        "invoice",
        "invoice_status_code",
        ["invoice_status_code"],
        ["code"],
    )
    op.drop_constraint(
        "invoice_reference_status_code_fkey", "invoice_reference", type_="foreignkey"
    )
    op.create_foreign_key(
        "invoice_reference_status_code_fkey",
        "invoice_reference",
        "invoice_reference_status_code",
        ["status_code"],
        ["code"],
    )
    op.drop_constraint(
        "payment_payment_status_code_fkey", "payment", type_="foreignkey"
    )
    op.create_foreign_key(
        "payment_payment_status_code_fkey",
        "payment",
        "payment_status_code",
        ["payment_status_code"],
        ["code"],
    )
    op.drop_constraint("fk_line_item_status", "payment_line_item", type_="foreignkey")
    op.create_foreign_key(
        "fk_line_item_status",
        "payment_line_item",
        "line_item_status_code",
        ["line_item_status_code"],
        ["code"],
    )
    op.drop_constraint(
        "payment_transaction_status_code_fkey",
        "payment_transaction",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "payment_transaction_status_code_fkey",
        "payment_transaction",
        "transaction_status_code",
        ["status_code"],
        ["code"],
    )

    # Now update COMPLETED invoices to PAID and delete the invoice_status_code
    op.execute(
        "update invoice set invoice_status_code='PAID' where invoice_status_code='COMPLETED' "
    )
    op.execute("delete from invoice_status_code where code='COMPLETED' ")

    # Update all line status DELETED to CANCELLED and CREATED to ACTIVE
    op.execute(
        "update payment_line_item set line_item_status_code='CANCELLED' where line_item_status_code='DELETED'"
    )
    op.execute(
        "update payment_line_item set line_item_status_code='ACTIVE' where line_item_status_code='CREATED'"
    )
    op.execute("delete from line_item_status_code where code in ('DELETED', 'CREATED')")

    # Update all line status DELETED to CANCELLED and CREATED to ACTIVE
    op.execute(
        "update invoice_reference set status_code='CANCELLED' where status_code='DELETED'"
    )
    op.execute(
        "update invoice_reference set status_code='ACTIVE' where status_code='CREATED'"
    )
    op.execute(
        "delete from invoice_reference_status_code where code in ('DELETED', 'CREATED')"
    )

    op.drop_table("status_code")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "status_code",
        sa.Column("code", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.Column(
            "description", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("code", name="status_code_pkey"),
    )

    op.drop_constraint(
        "payment_transaction_status_code_fkey",
        "payment_transaction",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "payment_transaction_status_code_fkey",
        "payment_transaction",
        "status_code",
        ["status_code"],
        ["code"],
    )
    op.drop_constraint("fk_line_item_status", "payment_line_item", type_="foreignkey")
    op.create_foreign_key(
        "fk_line_item_status",
        "payment_line_item",
        "status_code",
        ["line_item_status_code"],
        ["code"],
    )
    op.drop_constraint(
        "payment_payment_status_code_fkey", "payment", type_="foreignkey"
    )
    op.create_foreign_key(
        "payment_payment_status_code_fkey",
        "payment",
        "status_code",
        ["payment_status_code"],
        ["code"],
    )
    op.drop_constraint(
        "invoice_reference_status_code_fkey", "invoice_reference", type_="foreignkey"
    )
    op.create_foreign_key(
        "invoice_reference_status_code_fkey",
        "invoice_reference",
        "status_code",
        ["status_code"],
        ["code"],
    )
    op.drop_constraint(
        "invoice_invoice_status_code_fkey", "invoice", type_="foreignkey"
    )
    op.create_foreign_key(
        "invoice_invoice_status_code_fkey",
        "invoice",
        "status_code",
        ["invoice_status_code"],
        ["code"],
    )
    op.drop_table("transaction_status_code")
    op.drop_table("payment_status_code")
    op.drop_table("line_item_status_code")
    op.drop_table("invoice_status_code")
    op.drop_table("invoice_reference_status_code")
    # ### end Alembic commands ###
