"""firms fee codes

Revision ID: dbe9dc38ac33
Revises: 52a01edc692a
Create Date: 2022-03-30 15:04:45.566151

"""
from datetime import date

from alembic import op
from sqlalchemy import Date, String
from sqlalchemy.sql import column, table

# revision identifiers, used by Alembic.
revision = 'dbe9dc38ac33'
down_revision = '52a01edc692a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    distribution_code_link_table = table('distribution_code_links',
                                         column('distribution_code_id', String),
                                         column('fee_schedule_id', String)
                                         )

    fee_schedule_table = table('fee_schedules',
                               column('filing_type_code', String),
                               column('corp_type_code', String),
                               column('fee_code', String),
                               column('fee_start_date', Date),
                               column('fee_end_date', Date),
                               column('service_fee_code', String),
                               column('future_effective_fee_code', String),
                               column('priority_fee_code', String)
                               )

    op.bulk_insert(
        fee_schedule_table,
        [
            {
                'filing_type_code': 'DIS_VOL',
                'corp_type_code': 'SP',
                'fee_code': 'EN107',
                'fee_start_date': date.today(),
                'fee_end_date': None,
                'service_fee_code': None,
                'future_effective_fee_code': None,
                'priority_fee_code': 'PRI01'
            },
            {
                'filing_type_code': 'DIS_VOL',
                'corp_type_code': 'GP',
                'fee_code': 'EN107',
                'fee_start_date': date.today(),
                'fee_end_date': None,
                'service_fee_code': None,
                'future_effective_fee_code': None,
                'priority_fee_code': 'PRI01'
            }]
    )

    distribution_code_id_query = "select dc.distribution_code_id from distribution_codes dc " \
                                 "where upper(dc.name) = upper('Corporate Registry - Maintain Business') " \
                                 "and dc.start_date <= CURRENT_DATE " \
                                 "and (dc.end_date is null or dc.end_date > CURRENT_DATE)"
    conn = op.get_bind()
    res = conn.execute(distribution_code_id_query)
    if (res_fetch := res.fetchall()) and res_fetch[0]:
        distribution_code_id = res_fetch[0][0]
        res = conn.execute(
            f"select fee_schedule_id from fee_schedules where filing_type_code in ('DIS_VOL') and corp_type_code in ('SP','GP') ")
        distr_code_links = []
        for result in res.fetchall():
            fee_schedule_id = result[0]
            distr_code_links.append({
                'distribution_code_id': distribution_code_id,
                'fee_schedule_id': fee_schedule_id
            })
        op.bulk_insert(distribution_code_link_table, distr_code_links)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "DELETE FROM distribution_code_links WHERE fee_schedule_id in (select fee_schedule_id from fee_schedules where filing_type_code in ('DIS_VOL') and corp_type_code in ('SP','GP'))")

    op.execute(
        "DELETE FROM fee_schedules WHERE filing_type_code in ('DIS_VOL') and corp_type_code in ('SP','GP') ")

    # ### end Alembic commands ###
