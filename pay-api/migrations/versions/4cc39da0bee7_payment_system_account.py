"""payment_system_account

Revision ID: 4cc39da0bee7
Revises: 7a86a5703e27
Create Date: 2020-02-26 15:42:40.860549

"""

import base64

import sqlalchemy as sa
from alembic import op
from flask import current_app
from sqlalchemy import Integer, String
from sqlalchemy.sql import column, table

from pay_api.services.oauth_service import OAuthService
from pay_api.utils.enums import AuthHeaderType, ContentType


# revision identifiers, used by Alembic.
revision = "4cc39da0bee7"
down_revision = "7a86a5703e27"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bcol_payment_account",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("bcol_user_id", sa.String(length=50), nullable=True),
        sa.Column("bcol_account_id", sa.String(length=50), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["payment_account.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_bcol_payment_account_account_id"),
        "bcol_payment_account",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bcol_payment_account_bcol_account_id"),
        "bcol_payment_account",
        ["bcol_account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bcol_payment_account_bcol_user_id"),
        "bcol_payment_account",
        ["bcol_user_id"],
        unique=False,
    )
    op.create_table(
        "credit_payment_account",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("corp_number", sa.String(length=20), nullable=True),
        sa.Column("corp_type_code", sa.String(length=10), nullable=True),
        sa.Column("paybc_account", sa.String(length=50), nullable=True),
        sa.Column("paybc_party", sa.String(length=50), nullable=True),
        sa.Column("paybc_site", sa.String(length=50), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["payment_account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["corp_type_code"],
            ["corp_type.code"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_credit_payment_account_account_id"),
        "credit_payment_account",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_credit_payment_account_paybc_account"),
        "credit_payment_account",
        ["paybc_account"],
        unique=False,
    )
    op.create_table(
        "internal_payment_account",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("corp_number", sa.String(length=20), nullable=True),
        sa.Column("corp_type_code", sa.String(length=10), nullable=True),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["payment_account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["corp_type_code"],
            ["corp_type.code"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_internal_payment_account_account_id"),
        "internal_payment_account",
        ["account_id"],
        unique=False,
    )
    op.add_column("invoice", sa.Column("bcol_account_id", sa.Integer(), nullable=True))
    op.add_column(
        "invoice", sa.Column("credit_account_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "invoice", sa.Column("internal_account_id", sa.Integer(), nullable=True)
    )
    op.drop_constraint("invoice_account_id_fkey", "invoice", type_="foreignkey")
    op.create_foreign_key(
        None, "invoice", "bcol_payment_account", ["bcol_account_id"], ["id"]
    )
    op.create_foreign_key(
        None, "invoice", "credit_payment_account", ["credit_account_id"], ["id"]
    )
    op.create_foreign_key(
        None, "invoice", "internal_payment_account", ["internal_account_id"], ["id"]
    )

    op.add_column(
        "invoice", sa.Column("business_identifier", sa.String(length=20), nullable=True)
    )
    op.add_column(
        "invoice", sa.Column("corp_type_code", sa.String(length=10), nullable=True)
    )
    op.create_foreign_key(None, "invoice", "corp_type", ["corp_type_code"], ["code"])

    # Now drop the columns from payment_account table
    op.drop_index("ix_payment_account_account_number", table_name="payment_account")
    op.drop_index("ix_payment_account_bcol_account_id", table_name="payment_account")
    op.drop_index("ix_payment_account_bcol_user_id", table_name="payment_account")
    op.drop_constraint(
        "payment_account_payment_system_code_fkey",
        "payment_account",
        type_="foreignkey",
    )
    op.drop_constraint(
        "payment_account_corp_type_code_fkey", "payment_account", type_="foreignkey"
    )
    op.drop_column("payment_account", "payment_system_code")
    op.drop_column("payment_account", "corp_type_code")
    op.drop_column("payment_account", "site_number")
    op.drop_column("payment_account", "bcol_user_id")
    op.drop_column("payment_account", "account_number")
    op.drop_column("payment_account", "bcol_account_id")
    op.drop_column("payment_account", "corp_number")
    op.drop_column("payment_account", "party_number")

    # Delete all records from payment_account
    op.execute("delete from  payment_account;")
    op.drop_column("invoice", "account_id")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "payment_account",
        sa.Column(
            "corp_number", sa.VARCHAR(length=20), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "payment_account",
        sa.Column(
            "bcol_account_id", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "payment_account",
        sa.Column(
            "bcol_user_id", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "payment_account",
        sa.Column(
            "account_number", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "payment_account",
        sa.Column(
            "site_number", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "payment_account",
        sa.Column(
            "corp_type_code", sa.VARCHAR(length=10), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "payment_account",
        sa.Column(
            "party_number", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "payment_account",
        sa.Column(
            "payment_system_code",
            sa.VARCHAR(length=10),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_foreign_key(
        "payment_account_payment_system_code_fkey",
        "payment_account",
        "payment_system",
        ["payment_system_code"],
        ["code"],
    )
    op.create_foreign_key(
        "payment_account_corp_type_code_fkey",
        "payment_account",
        "corp_type",
        ["corp_type_code"],
        ["code"],
    )
    op.create_index(
        "ix_payment_account_bcol_user_id",
        "payment_account",
        ["bcol_user_id"],
        unique=False,
    )
    op.create_index(
        "ix_payment_account_bcol_account_id",
        "payment_account",
        ["bcol_account_id"],
        unique=False,
    )
    op.create_index(
        "ix_payment_account_account_number",
        "payment_account",
        ["account_number"],
        unique=False,
    )
    op.add_column(
        "invoice",
        sa.Column("account_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "invoice", type_="foreignkey")
    op.drop_constraint(None, "invoice", type_="foreignkey")
    op.drop_constraint(None, "invoice", type_="foreignkey")
    op.create_foreign_key(
        "invoice_account_id_fkey", "invoice", "payment_account", ["account_id"], ["id"]
    )
    op.drop_column("invoice", "internal_account_id")
    op.drop_column("invoice", "credit_account_id")
    op.drop_column("invoice", "bcol_account_id")
    op.drop_index(
        op.f("ix_internal_payment_account_account_id"),
        table_name="internal_payment_account",
    )
    op.drop_table("internal_payment_account")
    op.drop_index(
        op.f("ix_credit_payment_account_paybc_account"),
        table_name="credit_payment_account",
    )
    op.drop_index(
        op.f("ix_credit_payment_account_account_id"),
        table_name="credit_payment_account",
    )
    op.drop_table("credit_payment_account")
    op.drop_index(
        op.f("ix_bcol_payment_account_bcol_user_id"), table_name="bcol_payment_account"
    )
    op.drop_index(
        op.f("ix_bcol_payment_account_bcol_account_id"),
        table_name="bcol_payment_account",
    )
    op.drop_index(
        op.f("ix_bcol_payment_account_account_id"), table_name="bcol_payment_account"
    )
    op.drop_table("bcol_payment_account")

    op.drop_column("invoice", "business_identifier")
    op.drop_constraint(None, "invoice", type_="foreignkey")
    op.drop_column("invoice", "corp_type_code")
    # ### end Alembic commands ###
