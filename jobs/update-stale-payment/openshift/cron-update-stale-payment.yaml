kind: Template
apiVersion: v1
metadata:
  name: cron-update-stale-payment
  annotations:
    description: 'Scheduled Task to cleanup update-stale-payment records'
    tags: cronjob
objects:
  -
    kind: CronJob
    apiVersion: batch/v1beta1
    metadata:
      name: cron-update-stale-payment
    spec:
      successfulJobsHistoryLimit: 5
      failedJobsHistoryLimit: 5
      schedule: '0 */4 * * *'
      suspend: false
      jobTemplate:
        spec:
          template:
            spec:
              containers:
                -
                  name: update-stale-payment
                  image: 'docker-registry.default.svc:5000/l4ygcl-tools/update-stale-payment:${ENV_TAG}'
                  imagePullPolicy: Always
                  args:
                    - /bin/sh
                    - '-c'
                    - 'cd /opt/app-root/src; ./run.sh'
                  env:
                    -
                      name: DATABASE_USERNAME
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_USER
                    -
                      name: DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-secret'
                          key: DATABASE_PASSWORD
                    -
                      name: DATABASE_NAME
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_NAME
                    -
                      name: DATABASE_HOST
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_HOST
                    -
                      name: DATABASE_PORT
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_PORT
                    -
                      name: DATABASE_TEST_USERNAME
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_TEST_USER
                    -
                      name: DATABASE_TEST_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-secret'
                          key: DATABASE_TEST_PASSWORD
                    -
                      name: DATABASE_TEST_NAME
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_TEST_NAME
                    -
                      name: DATABASE_TEST_HOST
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_TEST_HOST
                    -
                      name: DATABASE_TEST_PORT
                      valueFrom:
                        configMapKeyRef:
                          name: '${DATABASE_NAME}-${TAG_NAME}-config'
                          key: DATABASE_TEST_PORT
                    -
                      name: JWT_OIDC_ALGORITHMS
                      valueFrom:
                        secretKeyRef:
                          name: '${KEYCLOAK_NAME}-${TAG_NAME}-secret'
                          key: JWT_OIDC_ALGORITHMS
                    -
                      name: JWT_OIDC_AUDIENCE
                      valueFrom:
                        secretKeyRef:
                          name: '${KEYCLOAK_NAME}-${TAG_NAME}-secret'
                          key: JWT_OIDC_AUDIENCE
                    -
                      name: JWT_OIDC_CLIENT_SECRET
                      valueFrom:
                        secretKeyRef:
                          name: '${KEYCLOAK_NAME}-${TAG_NAME}-secret'
                          key: JWT_OIDC_CLIENT_SECRET
                    -
                      name: JWT_OIDC_WELL_KNOWN_CONFIG
                      valueFrom:
                        secretKeyRef:
                          name: '${KEYCLOAK_NAME}-${TAG_NAME}-secret'
                          key: JWT_OIDC_WELL_KNOWN_CONFIG
                    -
                      name: JWT_OIDC_JWKS_CACHE_TIMEOUT
                      valueFrom:
                        secretKeyRef:
                          name: '${KEYCLOAK_NAME}-${TAG_NAME}-secret'
                          key: JWT_OIDC_JWKS_CACHE_TIMEOUT
                    -
                      name: PAYBC_BASE_URL
                      valueFrom:
                        secretKeyRef:
                          name: '${PAYBC_NAME}-${TAG_NAME}-secret'
                          key: PAYBC_BASE_URL
                    -
                      name: PAYBC_CLIENT_ID
                      valueFrom:
                        secretKeyRef:
                          name: '${PAYBC_NAME}-${TAG_NAME}-secret'
                          key: PAYBC_CLIENT_ID
                    -
                      name: PAYBC_CLIENT_SECRET
                      valueFrom:
                        secretKeyRef:
                          name: '${PAYBC_NAME}-${TAG_NAME}-secret'
                          key: PAYBC_CLIENT_SECRET
                    -
                      name: PAYBC_MEMO_LINE_NAME
                      valueFrom:
                        secretKeyRef:
                          name: '${PAYBC_NAME}-${TAG_NAME}-secret'
                          key: PAYBC_MEMO_LINE_NAME
                    -
                      name: PAYBC_PORTAL_URL
                      valueFrom:
                        secretKeyRef:
                          name: '${PAYBC_NAME}-${TAG_NAME}-secret'
                          key: PAYBC_PORTAL_URL
                    -
                      name: PAYBC_CONNECT_TIMEOUT
                      valueFrom:
                        secretKeyRef:
                          name: '${PAYBC_NAME}-${TAG_NAME}-secret'
                          key: PAYBC_CONNECT_TIMEOUT

                    -
                      name: PAYBC_GENERATE_RANDOM_INVOICE_NUMBER
                      valueFrom:
                        secretKeyRef:
                          name: '${PAYBC_NAME}-${TAG_NAME}-secret'
                          key: PAYBC_GENERATE_RANDOM_INVOICE_NUMBER
                    -
                      name: BCOL_DEBIT_ACCOUNT_VERSION
                      valueFrom:
                        secretKeyRef:
                          name: '${BCOL_NAME}-${TAG_NAME}-secret'
                          key: BCOL_DEBIT_ACCOUNT_VERSION
                    -
                      name: BCOL_LDAP_SERVER
                      valueFrom:
                        secretKeyRef:
                          name: '${BCOL_NAME}-${TAG_NAME}-secret'
                          key: BCOL_LDAP_SERVER
                    -
                      name: BCOL_LDAP_USER_DN_PATTERN
                      valueFrom:
                        secretKeyRef:
                          name: '${BCOL_NAME}-${TAG_NAME}-secret'
                          key: BCOL_LDAP_USER_DN_PATTERN
                    -
                      name: BCOL_LINK_CODE
                      valueFrom:
                        secretKeyRef:
                          name: '${BCOL_NAME}-${TAG_NAME}-secret'
                          key: BCOL_LINK_CODE
                    -
                      name: BCOL_QUERY_PROFILE_WSDL_URL
                      valueFrom:
                        secretKeyRef:
                          name: '${BCOL_NAME}-${TAG_NAME}-secret'
                          key: BCOL_QUERY_PROFILE_WSDL_URL
                    -
                      name: BCOL_VERIFY_USER_WSDL_URL
                      valueFrom:
                        secretKeyRef:
                          name: '${BCOL_NAME}-${TAG_NAME}-secret'
                          key: BCOL_VERIFY_USER_WSDL_URL
                    -
                      name: REPORT_API_BASE_URL
                      valueFrom:
                        configMapKeyRef:
                          name: '${NAME}-${TAG_NAME}-config'
                          key: REPORT_API_BASE_URL
                    -
                      name: AUTH_WEB_PAY_TRANSACTION_URL
                      valueFrom:
                        configMapKeyRef:
                          name: '${NAME}-${TAG_NAME}-config'
                          key: AUTH_WEB_PAY_TRANSACTION_URL
                    -
                      name: POD_TESTING
                      valueFrom:
                        configMapKeyRef:
                          name: '${NAME}-${TAG_NAME}-config'
                          key: POD_TESTING
                    - 
                      name: NATS_SERVERS
                      valueFrom:
                        configMapKeyRef:
                          name: "${NATS}-${TAG_NAME}-config"
                          key: NATS_SERVERS
                    - 
                      name: NATS_CLIENT_NAME
                      valueFrom:
                        configMapKeyRef:
                          name: "${NATS}-${TAG_NAME}-config"
                          key: NATS_CLIENT_NAME
                    - 
                      name: NATS_CLUSTER_ID
                      valueFrom:
                        configMapKeyRef:
                          name: "${NATS}-${TAG_NAME}-config"
                          key: NATS_CLUSTER_ID
                    - 
                      name: NATS_SUBJECT
                      valueFrom:
                        configMapKeyRef:
                          name: "${NATS}-${TAG_NAME}-config"
                          key: NATS_SUBJECT
                    - 
                      name: NATS_QUEUE
                      valueFrom:
                        configMapKeyRef:
                          name: "${NATS}-${TAG_NAME}-config"
                          key: NATS_QUEUE
                    -
                      name: AUTH_API_ENDPOINT
                      valueFrom:
                        configMapKeyRef:
                          name: '${NAME}-${TAG_NAME}-config'
                          key: AUTH_API_ENDPOINT
              restartPolicy: Never
              concurrencyPolicy: Forbid
parameters:
  -
    name: ENV_TAG
    displayName: ENV_TAG
    description: "The name assigned to all of the OpenShift resources associated to the\nserver instance."
    required: true
    value: latest
  -
    name: NAME
    displayName: Name
    description: "The name assigned to all of the OpenShift resources associated to the\nserver instance."
    required: true
    value: pay-api
  -
    name: APP_GROUP
    displayName: 'App Group'
    description: 'The name assigned to all of the deployments in this project.'
    required: true
    value: sbc-pay
  -
    name: IMAGE_NAMESPACE
    displayName: 'Image Namespace'
    required: true
    description: "The namespace of the OpenShift project containing the imagestream for\nthe application."
    value: l4ygcl-tools
  -
    name: TAG_NAME
    displayName: 'Environment TAG name'
    description: 'The TAG name for this environment, e.g., dev, test, prod'
    required: true
    value: dev
  -
    name: DATABASE_NAME
    displayName: 'Database App Name'
    description: 'A valid database app name used by the service.'
    required: true
    value: postgresql
  -
    name: KEYCLOAK_NAME
    displayName: Name
    description: "The name assigned to all of the OpenShift resources associated to the\nserver instance."
    required: true
    value: keycloak
  -
    name: PAYBC_NAME
    displayName: Name
    description: "The name assigned to all of the OpenShift resources associated to the\nserver instance."
    required: true
    value: paybc
  -
    name: BCOL_NAME
    displayName: Name
    description: "The name assigned to all of the OpenShift resources associated to the\nserver instance."
    required: true
    value: bcol
  -
    name: CPU_REQUEST
    displayName: 'Resources CPU Request'
    description: 'The resources CPU request (in cores) for this build.'
    required: true
    value: 100m
  -
    name: CPU_LIMIT
    displayName: 'Resources CPU Limit'
    description: 'The resources CPU limit (in cores) for this build.'
    required: true
    value: 750m
  -
    name: MEMORY_REQUEST
    displayName: 'Resources Memory Request'
    description: 'The resources Memory request (in Mi, Gi, etc) for this build.'
    required: true
    value: 100Mi
  -
    name: MEMORY_LIMIT
    displayName: 'Resources Memory Limit'
    description: 'The resources Memory limit (in Mi, Gi, etc) for this build.'
    required: true
    value: 2Gi
  -
    name: REPLICAS
    displayName: 'The number of replicas to run'
    description: 'The number of replicas to run in this environment.'
    required: true
    value: '1'
  -
    name: JAEGER_COLLECTOR
    displayName: 'Jaeger Tracing collector address'
    description: 'Jaeger Tracing collector address.'
    required: true
    value: '--collector.host-port=jaeger-collector.d7eovc-${TAG_NAME}.svc:14267'
  - 
    name: NATS
    displayName: NATS config
    description: NATS configurations for sbc-pay.
    required: true
    value: nats

